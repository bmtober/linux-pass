

== Motivation - Password Insanity

Web sites or applications often consider some of the following "strength" factors:

----------------------------------------------------------------------------
    Length ('e.g.,' 14 characters)
    Mixed case
    Not many repeated characters
    Includes letters, numbers, and symbols
    Does not include part of the username
    Not similar to prior passwords
    Does not hash to the same thing as a weak password
    Is not a keyboard walk
    Is not related to the individual
    Does not end with the common suffixes
    Does not start with the common prefixes
    Limited Retry Lockout
----------------------------------------------------------------------------

== Password Security Challenge Questions

'Thanks do Soheil Rezayazdi'
 
- What is the name of your least favorite child?
- In what year did you abandon your dreams?
- What is the maiden name of your father’s mistress?
- At what age did your childhood pet run away?
- What was the name of your favorite unpaid internship?
- What is your ex-spouse’s newest last name?
- What sports team do you fetishize to avoid meaningful discussion with others?
- What is the name of your favorite canceled TV show?
- What was the middle name of your first rebound?

== Frequent Change Requirements

- 90 days
- 60 days
- 30 days, etc.


== Create a Public Key: Initialization

----------------------------------------------------------------------------
$ gpg --gen-key

gpg (GnuPG) 1.4.19; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

gpg: directory '/home/aol/.gnupg' created
gpg: new configuration file '/home/aol/.gnupg/gpg.conf' created
gpg: WARNING: options in '/home/aol/.gnupg/gpg.conf' are not yet active during this run
gpg: keyring '/home/aol/.gnupg/secring.gpg' created
gpg: keyring '/home/aol/.gnupg/pubring.gpg' created
----------------------------------------------------------------------------


== Create a Public Key: Initialization

[subs="quotes"]
----------------------------------------------------
$ tree -a
.
`-- .gnupg
    |-- gpg.conf
    |-- pubring.gpg
    `-- secring.gpg

----------------------------------------------------



== Create a Public Key: Key Type

----------------------------------------------------------------------------
Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
Your selection? 1
----------------------------------------------------------------------------


== Create a Public Key: Key Size

----------------------------------------------------------------------------

RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 4096
Requested keysize is 4096 bits
Please specify how long the key should be valid.
         0 = key does not expire
      <n>  = key expires in n days
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
Key is valid for? (0) 
Key does not expire at all
Is this correct? (y/N) y

----------------------------------------------------------------------------

== Create a Public Key: Identity

----------------------------------------------------------------------------
You need a user ID to identify your key; the software constructs the user ID
from the Real Name, Comment and Email Address in this form:
    "Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>"

Real name: Berend Tober
Email address: btober@example.com
Comment: An illustration for BLUG
You selected this USER-ID:
    "Berend Tober (An illustration for BLUG) <btober@example.com>"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O

----------------------------------------------------------------------------


== Create a Public Key: Entropy

----------------------------------------------------------------------------
..........+++++

Not enough random bytes available.  Please do some other work to give
the OS a chance to collect more entropy! (Need 232 more bytes)
.........................+++++
gpg: key 7AD90EA3 marked as ultimately trusted
public and secret key created and signed.

gpg: checking the trustdb
gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
pub   4096R/7AD90EA3 2016-12-11
      Key fingerprint = 916E D7F1 9329 ACE2 7D09  76BA 53EB F9AC 7AD9 0EA3
uid                  Berend Tober (Example for BLUG) <btober@example.com>
sub   4096R/9C5F2578 2016-12-11
----------------------------------------------------------------------------


== Create a Public Key: Directory Hierarchy

[subs="quotes"]
----------------------------------------------------
$ tree -a
.
`-- .gnupg
    |-- gpg.conf
    |-- *private-keys-v1.d*
    |-- pubring.gpg
    |-- *pubring.gpg~*
    |-- *random_seed*
    |-- secring.gpg
    `-- *trustdb.gpg*
----------------------------------------------------

== List Keys

[subs="quotes"]
....................................................
$ gpg --list-keys
/home/aol/.gnupg/pubring.gpg
----------------------------
pub   4096R/407DFD77 2016-12-13
uid                  Berend Tober <btober@example.com>
sub   4096R/96C7662E 2016-12-13
....................................................


== Initialize Pass Utility

[subs="quotes"]
----------------------------------------------------
$ pass init btober
mkdir: created directory '/home/aol/.password-store'
Password store initialized for btober.
----------------------------------------------------

== Initialize Pass Utility

[subs="quotes"]
----------------------------------------------------
$ tree -a
.
|-- .gnupg
|   |-- gpg.conf
|   |-- private-keys-v1.d
|   |-- pubring.gpg
|   |-- pubring.gpg~
|   |-- random_seed
|   |-- secring.gpg
|   `-- trustdb.gpg
`-- *.password-store*
    `-- *.gpg-id*
----------------------------------------------------


----------------------------------------------------
$ cat .password-store/.gpg-id 
btober
----------------------------------------------------



== Insert a Password

[subs="quotes"]
----------------------------------------------------
$ pass insert gmail.com    
Enter password for gmail.com: mygmailpassword
----------------------------------------------------

== Insert a Password

[subs="quotes"]
----------------------------------------------------
tree -a
.
|-- .gnupg
|   |-- gpg.conf
|   |-- private-keys-v1.d
|   |-- pubring.gpg
|   |-- pubring.gpg~
|   |-- random_seed
|   |-- secring.gpg
|   `-- trustdb.gpg
`-- .password-store
    |-- .gpg-id
    `-- *gmail.com.gpg*
----------------------------------------------------


== Create a Public Key: Initialization

----------------------------------------------------
$ hexdump -C .password-store/gmail.com.gpg 
00000000  85 02 0c 03 6c a7 54 4b  9c 5f 25 78 01 10 00 a5  |....l.TK._%x....|
00000010  ae 8f f0 7a 7b 6f d9 cf  61 72 91 53 ba f0 3e 9b  |...z{o..ar.S..>.|
00000020  e8 3f 2a 10 c1 85 f9 5b  79 12 d5 01 6f ac 9f 75  |.?*....[y...o..u|
00000030  7c 65 e3 92 8b b5 24 f0  e7 e9 15 54 3b b5 3d 82  ||e....$....T;.=.|
00000040  61 1f 51 2f ea 46 56 7a  dc 13 fd 38 4f b6 fa 4d  |a.Q/.FVz...8O..M|
00000050  75 51 59 70 d9 fe 48 c7  93 da 3f 9d 94 af 9e f7  |uQYp..H...?.....|
00000060  e5 c6 37 82 f4 03 16 48  94 6f c9 24 34 e0 cf ba  |..7....H.o.$4...|
00000070  fa e5 d5 61 c0 33 04 57  8d 91 64 0a 3c f5 90 0c  |...a.3.W..d.<...|
00000080  37 b1 97 b9 ce 97 a0 24  69 d8 cc 5b ac 3e 0a 58  |7......$i..[.>.X|
00000090  3e d2 19 38 b0 c2 06 d0  c2 46 45 5f cd 70 78 37  |>..8.....FE_.px7|
000000a0  6c 41 0e 22 47 71 01 8c  03 71 84 ec 0c ff 77 b5  |lA."Gq...q....w.|
000000b0  5e 9a 56 7b 9a 2e 1d 9a  b5 c1 45 d9 b9 54 f4 30  |^.V{......E..T.0|
000000c0  04 19 ee dd 1b b0 67 60  27 9c f3 42 cc fe 40 f3  |......g`'..B..@.|
000000d0  66 4d e4 e1 98 de 3a 5d  a4 be 62 2f f3 a6 45 a0  |fM....:]..b/..E.|
000000e0  4c c2 69 be dc fb a6 c8  3f ff 86 dc 1b 61 2e c5  |L.i.....?....a..|
000000f0  25 64 e9 31 01 f5 a8 b3  a5 c6 5a 07 48 0a b2 6d  |%d.1......Z.H..m|
00000100  8e 6e 70 4c b6 fc 54 53  5c 6e b6 f6 db 92 bb ec  |.npL..TS\n......|
00000110  f8 33 26 d9 99 17 db fd  9e 65 cf 46 1b e6 96 2c  |.3&......e.F...,|
00000120  44 55 e1 61 df 58 51 dc  f4 f9 26 e0 f7 db 0f fe  |DU.a.XQ...&.....|
00000130  1e 0c 8d 45 34 a7 9e 23  2d b3 e1 85 a6 03 02 2c  |...E4..#-......,|
00000140  89 6d a8 59 06 4b 87 ad  4e 61 75 93 0b 9a ff b3  |.m.Y.K..Nau.....|
00000150  f2 91 75 cd a6 24 a4 14  72 89 d1 4c 48 b8 ee 4d  |..u..$..r..LH..M|
00000160  39 23 e4 56 f8 94 70 4e  bc 90 6d 33 86 6e 95 f1  |9#.V..pN..m3.n..|
00000170  ba 2e da 9e e9 be 2d f3  f0 56 d1 32 b1 06 42 1c  |......-..V.2..B.|
00000180  c9 37 62 33 a4 97 a6 e5  43 d3 2d 1a 0c f4 4f 94  |.7b3....C.-...O.|
00000190  b0 e1 98 38 4d 91 fd b0  5d 66 f3 38 33 84 83 24  |...8M...]f.83..$|
000001a0  91 b0 21 a8 77 51 40 73  1d 0f f4 15 7c 52 b4 cd  |..!.wQ@s....|R..|
000001b0  81 41 e0 d7 31 0a cd 0b  d4 d0 e4 36 13 b7 3f 8b  |.A..1......6..?.|
000001c0  2f 0b f5 91 b4 24 0a a2  76 f0 3a 02 72 81 fd 8b  |/....$..v.:.r...|
000001d0  71 ad 38 6c f6 48 92 90  71 42 52 56 6f 9b 40 e1  |q.8l.H..qBRVo.@.|
000001e0  bf 52 ea eb c4 61 68 71  4f 1f a7 20 cd c4 2a 78  |.R...ahqO.. ..*x|
000001f0  23 5a 09 10 c9 c6 2d a4  6e a1 85 26 a1 64 b9 3f  |#Z....-.n..&.d.?|
00000200  3c 74 05 29 63 7d 56 c8  65 74 a3 5f f5 44 ec d2  |<t.)c}V.et._.D..|
00000210  4b 01 e1 f0 cb 3a 5a 21  12 2d 83 cd 8f cd e3 64  |K....:Z!.-.....d|
00000220  94 0a 46 b9 ce eb 89 4d  b3 d7 2b 52 3b 75 b8 e8  |..F....M..+R;u..|
00000230  ef 60 da e8 b7 e5 ad b2  63 5f ac cb c5 10 58 60  |.`......c_....X`|
00000240  8e de 86 03 37 0e a1 d3  9a 10 40 c0 d4 4c 46 5a  |....7.....@..LFZ|
00000250  40 4f 40 ea 19 74 e2 9d  65 cb 2a 79              |@O@..t..e.*y|
0000025c
----------------------------------------------------


== Organize a Password Heirarchy

[subs="quotes"]
----------------------------------------------------
$ pass insert work/email
mkdir: created directory '/home/aol/.password-store/work'
Enter password for work/email: myworkpassword
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
$ pass insert work/benefits
Enter password for work/benefits: mybenefitspassword
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
$ pass insert home/email
mkdir: created directory '/home/aol/.password-store/home'
Enter password for home/email: myhomeemailpassword
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
[aol@dc7800 ~]$ pass insert home/netflix.com
Enter password for home/netflix.com: mynetflixpassword
----------------------------------------------------


== Organize a Password Heirarchy

[subs="quotes"]
----------------------------------------------------
$ tree -a
.
|-- .gnupg
|   |-- gpg.conf
|   |-- private-keys-v1.d
|   |-- pubring.gpg
|   |-- pubring.gpg~
|   |-- random_seed
|   |-- secring.gpg
|   `-- trustdb.gpg
`-- .password-store
    |-- .gpg-id
    |-- gmail.com.gpg
    |-- *home*
    |   |-- *email.gpg*
    |   `-- *netflix.com.gpg*
    `-- *work*
        |-- *benefits.gpg*
        `-- *email.gpg*
----------------------------------------------------


== List Password Heirarchy

[subs="quotes"]
----------------------------------------------------
$ pass ls
Password Store
|-- gmail.com
|-- home
|   |-- email
|   `-- netflix.com
`-- work
    |-- benefits
    `-- email
----------------------------------------------------


== Recall a Password

[subs="quotes"]
----------------------------------------------------
$ pass work/benefits
mybenefitspassword
----------------------------------------------------


== Password with Metadata

[subs="quotes"]
----------------------------------------------------
$ pass insert -m banking/bankofamerica.com
Enter contents of banking/bankofamerica.com and press Ctrl+D when finished:

mybankingpassword
username: btober
url: https://www.bankofamerica.com
challenge question 1: Smalltown, USA  
challenge question 2: Auntie Thema
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
$ pass ls
Password Store
|-- *banking*
|   `-- *bankofamerica.com*
|-- gmail.com
|-- home
|   |-- email
|   `-- netflix.com
`-- work
    |-- benefits
    `-- email
----------------------------------------------------


== Recall lists all the entered metadata:

[subs="quotes"]
----------------------------------------------------
$ pass banking/bankofamerica.com
mybankingpassword
username: btober
url: https://www.bankofamerica.com
challenge question 1: Smalltown, USA  
challenge question 2: Auntie Thema
----------------------------------------------------


== Auto-generated Passwords

[subs="quotes"]
----------------------------------------------------
$ pass generate -n facebook.com 20
The generated password to facebook.com is:
0lPs6OXn15WMlzyyMSwK
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
$ pass ls
Password Store
|-- banking
|   `-- bankofamerica.com
|-- *facebook.com* 
|-- gmail.com
|-- home
|   |-- email
|   `-- netflix.com
`-- work
    |-- benefits
    `-- email
----------------------------------------------------

[subs="quotes"]
----------------------------------------------------
$ pass facebook.com
0lPs6OXn15WMlzyyMSwK
----------------------------------------------------


== Command Line Help

[subs="quotes"]
----------------------------------------------------
$ pass --help

Usage:
    pass init [--reencrypt,-e] gpg-id
        Initialize new password storage and use gpg-id for encryption.
        Optionally reencrypt existing passwords using new gpg-id.
    pass [ls] [subfolder]
        List passwords.
    pass [show] [--clip,-c] pass-name
        Show existing password and optionally put it on the clipboard.
        If put on the clipboard, it will be cleared in 45 seconds.
    pass insert [--no-echo,-n | --multiline,-m] [--force,-f] pass-name
        Insert new password. Optionally, the console can be enabled to not
        echo the password back. Or, optionally, it may be multiline. Prompt
        before overwriting existing password unless forced.
    pass edit pass-name
        Insert a new password or edit an existing password using vi.
    pass generate [--no-symbols,-n] [--clip,-c] [--force,-f] pass-name pass-length
        Generate a new password of pass-length with optionally no symbols.
        Optionally put it on the clipboard and clear board after 45 seconds.
        Prompt before overwriting existing password unless forced.
    pass rm [--recursive,-r] [--force,-f] pass-name
        Remove existing password or directory, optionally forcefully.
    pass git git-command-args...
        If the password store is a git repository, execute a git command
        specified by git-command-args.
    pass help
        Show this text.
    pass version
        Show version information.
----------------------------------------------------

== References

 https://alexcabal.com/creating-the-perfect-gpg-keypair/
 https://www.passwordstore.org/
 https://en.wikipedia.org/wiki/Wikipedia:Most_common_passwords/10000
 https://www.mcsweeneys.net/articles/nihilistic-password-security-questions
 https://qz.com/501073/the-top-100-passwords-on-ashley-madison/


